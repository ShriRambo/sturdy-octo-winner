.org-comment {
    /* font-lock-comment-face */
    color: #928374;
}
.org-comment-delimiter {
    /* font-lock-comment-delimiter-face */
    color: #928374;
}
.org-keyword {
    /* font-lock-keyword-face */
    color: #fb4934;
}
.org-org-special-keyword {
    /* org-special-keyword */
    color: #dfd2b8;
}
.org-string {
    /* font-lock-string-face */
    color: #b8bb26;
}
.org-constant {
    /* font-lock-constant-face */
    color: #d3869b;
}
.org-function-name {
    /* font-lock-function-name-face */
    color: #b8bb26;
}
.org-variable-name {
    /* font-lock-variable-name-face */
    color: #83a598;
}
.org-builtin {
    /* font-lock-builtin-face */
    color: #fe8019;
}
.org-regexp-grouping-backslash {
    /* font-lock-regexp-grouping-backslash */
    color: #ebdbb2;
    font-weight: bold;
}
.org-regexp-grouping-construct {
    /* font-lock-regexp-grouping-construct */
    color: #ebdbb2;
    font-weight: bold;
}
.org-doc {
    /* font-lock-doc-face */
    color: #dfd2b8;
}
.org-negation-char {
    /* font-lock-negation-char-face */
    color: #ebdbb2;
    font-weight: bold;
}
.org-type {
    /* font-lock-type-face */
    color: #fabd2f;
}
.org-rainbow-delimiters-base {
    /* rainbow-delimiters-base-face */
    color: #ebdbb2;
    background-color: #282828;
}
.org-rainbow-delimiters-base-error {
    /* rainbow-delimiters-base-error-face */
    color: #fb4934;
    background-color: #282828;
}
.org-rainbow-delimiters-depth-1 {
    /* rainbow-delimiters-depth-1-face */
    color: #fe8019;
}
.org-rainbow-delimiters-depth-2 {
    /* rainbow-delimiters-depth-2-face */
    color: #cc241d;
}
.org-rainbow-delimiters-depth-3 {
    /* rainbow-delimiters-depth-3-face */
    color: #b8bb26;
}
.org-rainbow-delimiters-depth-4 {
    /* rainbow-delimiters-depth-4-face */
    color: #83a598;
}
.org-rainbow-delimiters-depth-5 {
    /* rainbow-delimiters-depth-5-face */
    color: #8ec07c;
}
.org-rainbow-delimiters-depth-6 {
    /* rainbow-delimiters-depth-6-face */
    color: #83a598;
}
.org-rainbow-delimiters-depth-7 {
    /* rainbow-delimiters-depth-7-face */
    color: #cc241d;
}
.org-rainbow-delimiters-depth-8 {
    /* rainbow-delimiters-depth-8-face */
    color: #b8bb26;
}
.org-rainbow-delimiters-depth-9 {
    /* rainbow-delimiters-depth-9-face */
    color: #d3869b;
}
.org-rainbow-delimiters-mismatched {
    /* rainbow-delimiters-mismatched-face */
    color: #fb4934;
    font-weight: bold;
}
.org-rainbow-delimiters-unmatched {
    /* rainbow-delimiters-unmatched-face */
    color: #fb4934;
    font-weight: bold;
}


a {
    color: inherit;
    background-color: inherit;
    font: inherit;
    text-decoration: inherit;
}
a:hover {
    text-decoration: underline;
}


pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
}
pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
}
pre.src:before {
    display: none;
    position: absolute;
    background-color: #e9ebf5;
    color: black;
    font-size:x-small;
    border-radius: 15px 50px;
    top: 10px;
    right: 10px;
    padding: 2px 6px;
    border: 1px solid black;
    box-shadow: inset -3px -3px 0px #0006;
}
pre.src:hover:before { display: inline;}
/* Languages per Org manual */
pre.src-C:before { content: 'C'; }
/* pre.src-C++ doesn't work in CSS */
pre.src-css:before { content: 'CSS'; }
pre.src-calc:before { content: 'Emacs Calc'; }
pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
pre.src-js:before { content: 'Javascript'; }
pre.src-latex:before { content: 'LaTeX'; }
pre.src-matlab:before { content: 'MATLAB'; }
pre.src-mscgen:before { content: 'Mscgen'; }
pre.src-ocaml:before { content: 'Objective Caml'; }
pre.src-octave:before { content: 'Octave'; }
pre.src-org:before { content: 'Org mode'; }
pre.src-oz:before { content: 'OZ'; }
pre.src-plantuml:before { content: 'Plantuml'; }
pre.src-processing:before { content: 'Processing.js'; }
pre.src-python:before { content: 'Python'; }
pre.src-R:before { content: 'R'; }
pre.src-ruby:before { content: 'Ruby'; }
pre.src-sass:before { content: 'Sass'; }
pre.src-scheme:before { content: 'Scheme'; }
pre.src-screen:before { content: 'Gnu Screen'; }
pre.src-sed:before { content: 'Sed'; }
pre.src-sh:before { content: 'shell'; }
pre.src-sql:before { content: 'SQL'; }
pre.src-sqlite:before { content: 'SQLite'; }
/* additional languages in org.el's org-babel-load-languages alist */
pre.src-forth:before { content: 'Forth'; }
pre.src-io:before { content: 'IO'; }
pre.src-J:before { content: 'J'; }
pre.src-makefile:before { content: 'Makefile'; }
pre.src-maxima:before { content: 'Maxima'; }
pre.src-perl:before { content: 'Perl'; }
pre.src-picolisp:before { content: 'Pico Lisp'; }
pre.src-scala:before { content: 'Scala'; }
pre.src-shell:before { content: 'Shell Script'; }
pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
/* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
pre.src-cpp:before  { content: 'C++'; }
pre.src-abc:before  { content: 'ABC'; }
pre.src-coq:before  { content: 'Coq'; }
pre.src-groovy:before  { content: 'Groovy'; }
/* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
pre.src-bash:before  { content: 'bash'; }
pre.src-csh:before  { content: 'csh'; }
pre.src-ash:before  { content: 'ash'; }
pre.src-dash:before  { content: 'dash'; }
pre.src-ksh:before  { content: 'ksh'; }
pre.src-mksh:before  { content: 'mksh'; }
pre.src-posh:before  { content: 'posh'; }
/* Additional Emacs modes also supported by the LaTeX listings package */
pre.src-ada:before { content: 'Ada'; }
pre.src-asm:before { content: 'Assembler'; }
pre.src-caml:before { content: 'Caml'; }
pre.src-delphi:before { content: 'Delphi'; }
pre.src-html:before { content: 'HTML'; }
pre.src-idl:before { content: 'IDL'; }
pre.src-mercury:before { content: 'Mercury'; }
pre.src-metapost:before { content: 'MetaPost'; }
pre.src-modula-2:before { content: 'Modula-2'; }
pre.src-pascal:before { content: 'Pascal'; }
pre.src-ps:before { content: 'PostScript'; }
pre.src-prolog:before { content: 'Prolog'; }
pre.src-simula:before { content: 'Simula'; }
pre.src-tcl:before { content: 'tcl'; }
pre.src-tex:before { content: 'TeX'; }
pre.src-plain-tex:before { content: 'Plain TeX'; }
pre.src-verilog:before { content: 'Verilog'; }
pre.src-vhdl:before { content: 'VHDL'; }
pre.src-xml:before { content: 'XML'; }
pre.src-nxml:before { content: 'XML'; }
/* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
pre.src-conf:before { content: 'Configuration File'; }

